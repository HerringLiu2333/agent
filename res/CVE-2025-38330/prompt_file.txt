1. CVE Identifier
CVE-2025-38330

2. Vulnerability Type
Out-of-bounds (OOB) memory read due to inconsistent buffer length management

3. Root Cause Summary
In the KUnit test function cs_dsp_ctl_cache_init_multiple_offsets(), buffers for register values and readback data are allocated using the default mock_coeff_template.length_bytes (4 bytes), but the test later overrides def.length_bytes to 8 bytes without resizing the previously allocated buffers. Subsequent operations (regmap writes/reads and control cache reads) use the updated 8-byte length on 4-byte buffers, causing OOB reads detected by KASAN. The patch removes the unsafe length override, keeping the original 4-byte length for all operations, thereby aligning buffer sizes with access lengths.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
- Cirrus Logic DSP firmware KUnit tests (cs_dsp control cache), firmware/cs_dsp test utilities

2) Pre-Patch Flaw:
- In cs_dsp_ctl_cache_init_multiple_offsets(), the code allocates reg_vals[i] and readback using def.length_bytes initialized from mock_coeff_template (4 bytes), then sets def.length_bytes = 8; before performing data transfers and comparisons. This mutation creates a mismatch between allocated buffer sizes (4 bytes) and the accessed length (8 bytes).

3) Trigger Condition:
- Running the KUnit test cs_dsp_ctl_cache_init_multiple_offsets() with KASAN enabled (or generally), where regmap_raw_write(), regmap_raw_read(), cs_dsp_coeff_lock_and_read_ctrl(), and KUNIT_EXPECT_MEMEQ are called with def.length_bytes = 8 while reg_vals[i] and readback are only 4 bytes.

4) Impact Mechanism:
- OOB read from 4-byte buffers when 8-byte transfers/comparisons are attempted:
  - regmap_raw_write/read using an 8-byte length on 4-byte source/destination buffers.
  - cs_dsp_coeff_lock_and_read_ctrl writing 8 bytes into a 4-byte readback buffer.
  - KUNIT_EXPECT_MEMEQ comparing 8 bytes across 4-byte buffers.
  - KASAN reports out-of-bounds access; test behavior becomes undefined and may crash.

5. Patch Analysis
1) Fix Approach:
- Eliminate the inconsistent length change by removing the def.length_bytes override, ensuring all subsequent operations continue to use the originally allocated 4-byte size.

2) Key Code Changes:
- In cs_dsp_ctl_cache_init_multiple_offsets():
  - Removed the line “def.length_bytes = 8;” (PATCH_DIFF hunk).
- This preserves def.length_bytes == mock_coeff_template.length_bytes (4 bytes) throughout buffer allocation and access.

3) Locking/Concurrency Impact:
- None. The issue and fix are strictly about buffer length consistency in a test; no locking or concurrency logic is involved or changed.

6. Broader Kernel Security Implications
- Even in test code, inconsistent size management can lead to memory safety violations that obscure real issues and destabilize test environments. Ensuring buffer allocations match access lengths prevents false positives from KASAN and improves reliability of the test suite. This change reinforces the importance of consistent parameter handling in firmware/control cache tests and reduces the risk of masking genuine driver bugs behind test-induced memory errors.