1. CVE Identifier
CVE-2024-58014

2. Vulnerability Type
Out-of-bounds array access (read)

3. Root Cause Summary
In wlc_phy_iqcal_gainparams_nphy(), the code searches a calibration table for a matching gain_index and then unconditionally indexes tbl_iqcal_gainparams_nphy using k. If no match is found, k remains equal to NPHY_IQCAL_NUMGAINS, causing an out-of-bounds read when accessing tbl_iqcal_gainparams_nphy[band_idx][k][...]. This missing bounds validation enables reading past the end of the table and propagating invalid data into calibration parameters.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
Broadcom brcmsmac wireless driver, N-PHY calibration (drivers/net/wireless/broadcom/brcm80211/brcmsmac/phy/phy_n.c)

2) Pre-Patch Flaw:
After the loop over k (0..NPHY_IQCAL_NUMGAINS-1), the code does not check whether a match was found before using k to index tbl_iqcal_gainparams_nphy. The subsequent assignments to params->txgm/pga/pad/ncorr and cal_gain use potentially invalid k, leading to OOB access.

3) Trigger Condition:
On PHY revisions < 3 (the else branch), when the constructed gain_index from target_gain.{pad,pga,txgm} does not match any entry in tbl_iqcal_gainparams_nphy[band_idx][k][0], the for-loop exits with k == NPHY_IQCAL_NUMGAINS and the code still indexes the table with k.

4) Impact Mechanism:
Out-of-bounds reads from tbl_iqcal_gainparams_nphy can fetch unintended memory, leading to invalid parameter values written into params, potential kernel faults (e.g., page fault/KASAN report), and instability during PHY calibration. While the write targets only the params struct, the read from beyond the table boundary can corrupt execution with undefined data or trigger a crash.

5. Patch Analysis
1) Fix Approach:
Add a bounds check that detects the “not found” case and aborts early, preventing any table access with an invalid index.

2) Key Code Changes:
Inserted immediately after the search loop:
- if (WARN_ON(k == NPHY_IQCAL_NUMGAINS))
-     return;
This validates k before any tbl_iqcal_gainparams_nphy[band_idx][k][...] accesses, converting the previous implicit assumption into explicit guard with a WARN and safe early return.

3) Locking/Concurrency Impact:
None. The change is purely a bounds check and early return; no locking or ordering semantics were added or modified.

6. Broader Kernel Security Implications
Bounds validation after failed lookups into static tables is essential in kernel drivers to prevent OOB memory access. Even with hardware-derived inputs, unexpected or inconsistent states can occur; defensive checks avoid crashes and latent bugs. This patch reinforces safe calibration logic and reduces the risk of denial-of-service conditions due to malformed or unrecognized gain settings on older PHY revisions.