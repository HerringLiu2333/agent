1. CVE Identifier
CVE-2024-58081

2. Vulnerability Type
NULL pointer dereference due to incorrect initialization order (logic/initialization bug leading to kernel crash/DoS)

3. Root Cause Summary
pm_genpd_init() derives and sets the embedded struct device’s name via dev_set_name() from genpd->name. In mmp_pm_domain_register(), pm_genpd_init() was invoked before genpd->name was assigned, leaving genpd->dev without a valid name (NULL). After upstream changes switched internal users to dev_name(&genpd->dev), later debugfs setup called strlen() on a NULL device name, causing a NULL pointer dereference and kernel crash.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
- Clock subsystem for Marvell MMP (drivers/clk/mmp) integrating with the generic power domain (genpd) core.

2) Pre-Patch Flaw:
- In mmp_pm_domain_register(), pm_genpd_init(&pm_domain->genpd, NULL, true) was called before setting pm_domain->genpd.name = name.
- Because pm_genpd_init() sets the device name internally (via dev_set_name()), calling it before assigning genpd.name resulted in a NULL device name.

3) Trigger Condition:
- Registering the PM domain via mmp_pm_domain_register() with the above order, then later genpd core debug initialization (genpd_debug_init/genpd_debug_add) accessing dev_name(&genpd->dev).
- As per the call trace, debugfs_create_dir → strlen() dereferenced a NULL name during initcalls (e.g., at boot).

4) Impact Mechanism:
- dev_name(&genpd->dev) returned a pointer to a NULL name due to earlier incorrect initialization, leading to strlen(NULL) inside debugfs creation.
- Results in kernel NULL pointer dereference and panic, causing denial of service.

5. Patch Analysis
1) Fix Approach:
- Reorder initialization so that genpd.name and callbacks are set before invoking pm_genpd_init(), ensuring dev_set_name() receives a valid name.

2) Key Code Changes:
- In drivers/clk/mmp/pwr-island.c:mmp_pm_domain_register():
  - Moved pm_genpd_init(&pm_domain->genpd, NULL, true) to after:
    - pm_domain->genpd.name = name;
    - pm_domain->genpd.power_on = mmp_pm_domain_power_on;
    - pm_domain->genpd.power_off = mmp_pm_domain_power_off;
- This guarantees the embedded device’s name is properly initialized during pm_genpd_init().

3) Locking/Concurrency Impact:
- No locking or concurrency changes; the fix is purely an initialization order correction within a single-threaded registration path.

6. Broader Kernel Security Implications
- Highlights fragility when core APIs change semantics (using dev_name(&genpd->dev) instead of genpd->name): drivers must ensure proper initialization order so device names are valid before genpd/core consumes them.
- Similar drivers calling pm_genpd_init() before setting genpd.name may be susceptible to the same NULL dereference, potentially causing boot-time panics and system-wide DoS.