1. CVE Identifier
CVE-2025-38497

2. Vulnerability Type
Out-of-bounds read (OOB read) due to missing length validation on zero-length input in configfs attribute store handlers

3. Root Cause Summary
Both webusb_landingPage_store() and os_desc_qw_sign_store() accessed page[l - 1] to strip a trailing newline without first ensuring len > 0, so a zero-length write led to reading before the start of the buffer (page[-1]). The patch adds an early return when len == 0, eliminating the invalid index access.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
USB gadget configfs (WebUSB landingPage and OS descriptor qw_sign attributes)

2) Pre-Patch Flaw:
- In webusb_landingPage_store(), l = len; followed by if (page[l - 1] == '\n') ... without checking len > 0.
- In os_desc_qw_sign_store(), l = min_t(int, len, OS_STRING_QW_SIGN_LEN >> 1); followed by if (page[l - 1] == '\n') ... without checking len > 0.
- This unguarded indexing causes page[-1] when len == 0.

3) Trigger Condition:
Writing an empty string (len == 0) to the configfs attributes “landingPage” or “qw_sign” (e.g., echo -n "" > <attribute>), which makes l == 0 and triggers the page[l - 1] access.

4) Impact Mechanism:
An out-of-bounds read of one byte before the kernel buffer backing the configfs write. This can lead to a kernel fault/KASAN report and local denial of service. Information disclosure from the single-byte read is Unknown/Not determinable.

5. Patch Analysis
1) Fix Approach:
Add an early guard to handle zero-length input by returning immediately, avoiding any access to page[len - 1].

2) Key Code Changes:
- In webusb_landingPage_store():
  + Inserted:
    if (!len)
        return len;
  + This precedes the newline check on page[l - 1].
- In os_desc_qw_sign_store():
  + Inserted:
    if (!len)
        return len;
  + This precedes computing/using l and the newline check on page[l - 1].

3) Locking/Concurrency Impact:
No changes to locking or concurrency. Existing mutex_lock/unlock around state updates remain unchanged; the fix only adds an early return path before any locking.

6. Broader Kernel Security Implications
- Reinforces the need for strict input-length validation in sysfs/configfs store handlers, especially before indexing the last character to strip newlines.
- Similar tail-inspection patterns elsewhere should be audited for zero-length handling to prevent OOB reads and potential DoS.
- Demonstrates that even single-byte pre-boundary reads in kernel paths accessible to unprivileged users can destabilize the system.