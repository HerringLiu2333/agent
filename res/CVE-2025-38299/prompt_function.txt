1. CVE Identifier
CVE-2025-38299

2. Vulnerability Type
NULL pointer dereference (kernel crash/DoS due to missing component initialization)

3. Root Cause Summary
The MT8195 ASoC machine driver declared the codec component of the ETDM2_IN_BE and ETDM1_OUT_BE back-end DAI links as COMP_EMPTY(), which leaves the codec dai_name as NULL when the device tree does not bind a codec. During probe, the driver/framework compares dai_name strings, invoking strcmp on a NULL pointer, causing a NULL dereference and kernel crash. The patch replaces COMP_EMPTY() with COMP_DUMMY() for these links, providing a non-NULL dummy codec name and avoiding the crash.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
ALSA System-on-Chip (ASoC) â€“ MediaTek MT8195 machine driver

2) Pre-Patch Flaw:
- In SND_SOC_DAILINK_DEFS for ETDM2_IN_BE and ETDM1_OUT_BE, the codec component was defined with COMP_EMPTY(), unlike other links that use COMP_DUMMY().
- With COMP_EMPTY(), the codec dai_name remains NULL if no codec is provided via DT.
- The probe path (mt8195_mt6359_soc_card_probe/mtk_soundcard_common_probe) subsequently performs string comparisons on dai_name, leading to strcmp(NULL, ...) and a NULL dereference.

3) Trigger Condition:
- Device tree does not assign a codec to ETDM2_IN_BE or ETDM1_OUT_BE.
- Deferred probe of the sound card executes name comparisons (Call trace shows __pi_strcmp called from mt8195_mt6359_soc_card_probe/mtk_soundcard_common_probe), with x0 = 0 indicating a NULL first argument in strcmp.

4) Impact Mechanism:
- Dereferencing a NULL pointer in strcmp during probe causes an oops and kernel crash (Oops: 0000000096000004), resulting in denial of service at boot or failed ASoC card initialization.

5. Patch Analysis
1) Fix Approach:
- Replace COMP_EMPTY() with COMP_DUMMY() for the codec component of the affected DAI links so the ASoC core uses a dummy codec with a valid non-NULL dai_name when no real codec is provided by DT.

2) Key Code Changes:
- In SND_SOC_DAILINK_DEFS(ETDM2_IN_BE): changed the codec array from DAILINK_COMP_ARRAY(COMP_EMPTY()) to DAILINK_COMP_ARRAY(COMP_DUMMY()).
- In SND_SOC_DAILINK_DEFS(ETDM1_OUT_BE): changed the codec array from DAILINK_COMP_ARRAY(COMP_EMPTY()) to DAILINK_COMP_ARRAY(COMP_DUMMY()).
- Evidence: [PATCH_DIFF] shows both hunks replacing COMP_EMPTY() with COMP_DUMMY() for ETDM2_IN_BE and ETDM1_OUT_BE; [PATCH_DESCRIPTION] explains that COMP_EMPTY() made codec dai_name NULL and caused the crash; [FUNCTION_CONTENT] shows pre-patch definitions with COMP_EMPTY() for these two links.

3) Locking/Concurrency Impact:
- None. The change only affects component initialization defaults (dummy vs empty codec) and does not alter locking or ordering.

6. Broader Kernel Security Implications
- Ensuring optional components default to safe dummy placeholders prevents NULL dereferences from configuration omissions, improving robustness against malformed or incomplete firmware/DT configurations.
- This pattern reduces attack surface for simple denial-of-service conditions triggered by invalid platform data and encourages defensive initialization practices across ASoC machine drivers.