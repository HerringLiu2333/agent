1. CVE Identifier
CVE-2025-38299

2. Vulnerability Type
NULL pointer dereference (missing handling of optional codec component)

3. Root Cause Summary
The MT8195 ASoC card defined the codec component for ETDM2_IN_BE and ETDM1_OUT_BE as COMP_EMPTY(), which leaves the codec dai_name NULL when the device tree does not provide a codec for these links. Subsequent probe logic (mtk_soundcard_common_probe) unconditionally compares this name, leading to a NULL pointer passed into strcmp (__pi_strcmp), and a kernel crash. The patch replaces COMP_EMPTY() with COMP_DUMMY(), ensuring a valid dummy component so that dai_name is not NULL and probe code does not dereference a NULL pointer.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
ALSA SoC (ASoC) â€“ MediaTek MT8195 machine driver/link definitions

2) Pre-Patch Flaw:
- ETDM2_IN_BE and ETDM1_OUT_BE were defined with DAILINK_COMP_ARRAY(COMP_EMPTY()), leaving the codec dai_name unset (NULL) if DT did not bind a codec.
- Probe path (mtk_soundcard_common_probe) performs string comparisons on the codec DAI name without guarding against NULL, resulting in calling __pi_strcmp with a NULL pointer.

3) Trigger Condition:
- Device tree omits assigning a codec to ETDM2_IN_BE or ETDM1_OUT_BE.
- During deferred probe (deferred_probe_work_func), mtk_soundcard_common_probe iterates links and attempts strcmp on a NULL dai_name, triggering the fault.

4) Impact Mechanism:
- A NULL pointer dereference in __pi_strcmp (pc: __pi_strcmp+0x24/0x140) causes an oops during probe, leading to a boot-time crash/denial of service on affected platforms.

5. Patch Analysis
1) Fix Approach:
- Convert the codec component for the affected DAI links from COMP_EMPTY() to COMP_DUMMY(), providing a valid dummy codec endpoint when no real codec is specified by DT.
- This ensures the ASoC core/machine driver has a non-NULL codec dai_name or otherwise valid placeholder, preventing NULL dereferences in comparison logic.

2) Key Code Changes:
- In SND_SOC_DAILINK_DEFS(ETDM2_IN_BE): DAILINK_COMP_ARRAY(COMP_EMPTY()) -> DAILINK_COMP_ARRAY(COMP_DUMMY()).
- In SND_SOC_DAILINK_DEFS(ETDM1_OUT_BE): DAILINK_COMP_ARRAY(COMP_EMPTY()) -> DAILINK_COMP_ARRAY(COMP_DUMMY()).

3) Locking/Concurrency Impact:
- None. The change is declarative in DAI link component definitions and does not alter locking or execution order.

6. Broader Kernel Security Implications
- Strengthens robustness of ASoC machine drivers against incomplete or optional DT configurations by using dummy components for unconnected links.
- Prevents boot-time denial-of-service conditions caused by NULL dereferences in probe paths.
- Encourages correct use of COMP_DUMMY() for optional endpoints, reducing similar NULL handling bugs in other ASoC drivers.