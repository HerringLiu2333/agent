1. CVE Identifier
CVE-2025-40114

2. Vulnerability Type
Out-of-bounds read

3. Root Cause Summary
The driver returned a hardware-derived index from veml6075_read_int_time_index without validating it against the size of the local lookup array veml6075_it_ms. veml6075_read_int_time_ms then used this unchecked index to access veml6075_it_ms, resulting in a possible out-of-bounds read when the hardware provided values ≥ 5. This missing bounds validation on the configuration field VEML6075_CONF_IT is the root cause.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
Industrial I/O (IIO) subsystem, light sensor driver for VEML6075

2) Pre-Patch Flaw:
- In veml6075_read_int_time_index, the code returned FIELD_GET(VEML6075_CONF_IT, conf) directly, with no check against ARRAY_SIZE(veml6075_it_ms).
- In veml6075_read_int_time_ms, the returned index was used as "*val = veml6075_it_ms[int_index]" without verification, enabling out-of-bounds array access if int_index exceeded 4.

3) Trigger Condition:
- The VEML6075_CMD_CONF register’s VEML6075_CONF_IT field yields a value in the range 5–7 (as noted in the patch description), due to broken or nonconforming hardware behavior.

4) Impact Mechanism:
- The unchecked index causes an out-of-bounds read from the 5-element array veml6075_it_ms in kernel memory, leading to undefined behavior and potential information exposure via the returned value to user space through the IIO read path.

5. Patch Analysis
1) Fix Approach:
Bounds checking was added to validate the integration time index against the size of the lookup array and to return an error on invalid values.

2) Key Code Changes:
- In veml6075_read_int_time_index:
  - Introduced local variable int_index to store FIELD_GET(VEML6075_CONF_IT, conf).
  - Added "if (int_index >= ARRAY_SIZE(veml6075_it_ms)) return -EINVAL;" to reject out-of-range indices.
  - Returned int_index only after successful validation.
- No changes were required in veml6075_read_int_time_ms; it now safely uses the validated index.

3) Locking/Concurrency Impact:
No changes to locking or concurrency. The existing mutex guard in veml6075_read_int_time_ms remains, and the new bounds check only affects the return path of veml6075_read_int_time_index.

6. Broader Kernel Security Implications
Validating hardware-derived indices before using them to access kernel arrays prevents out-of-bounds reads that can leak kernel data or cause instability. This hardening reduces risk from misbehaving devices and improves resilience of the IIO subsystem against faulty hardware inputs. It exemplifies the importance of defensive checks around register-derived parameters to avoid memory-safety issues in drivers.