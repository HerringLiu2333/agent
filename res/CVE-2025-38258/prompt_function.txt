1. CVE Identifier
CVE-2025-38258

2. Vulnerability Type
Kernel memory leak via sysfs attribute writes leading to potential denial-of-service (resource exhaustion)

3. Root Cause Summary
memcg_path_store() allocated a new buffer for filter->memcg_path on every write and overwrote the pointer without deallocating the previously allocated buffer. The pre-patch logic performed kmalloc_array() and strscpy(), then directly assigned “filter->memcg_path = path;” with no preceding kfree(), causing each write to leak count+1 bytes. This missing deallocation in the sysfs store path allowed unprivileged users to steadily leak kernel memory by repeatedly writing to the memcg_path attribute.

4. Kernel Subsystem Analysis
1) Affected Subsystem:
mm/damon/sysfs-schemes (DAMOS sysfs interface for memory cgroup path filter)

2) Pre-Patch Flaw:
In memcg_path_store(), the previous filter->memcg_path was not freed before assigning a newly allocated string, resulting in orphaned allocations and a cumulative memory leak.

3) Trigger Condition:
Repeated writes to the memcg_path DAMOS sysfs file (e.g., echoing strings to the attribute) cause successive allocations and pointer overwrites without freeing the old buffer.

4) Impact Mechanism:
Each write allocates a new buffer of size count+1 and replaces filter->memcg_path, losing the reference to the old buffer. Over time, unbounded kernel memory consumption can occur, potentially leading to memory pressure, OOM conditions, and system instability or denial-of-service.

5. Patch Analysis
1) Fix Approach:
Introduce explicit deallocation of the previously assigned buffer by calling kfree(filter->memcg_path) before updating the pointer with the newly allocated path.

2) Key Code Changes:
A single line addition in memcg_path_store():
- Added “kfree(filter->memcg_path);” between strscpy(path, buf, count + 1); and filter->memcg_path = path;

3) Locking/Concurrency Impact:
No locking or concurrency changes were made. The patch strictly corrects memory lifecycle management; concurrent access semantics remain unchanged. Any concurrent use of filter->memcg_path outside this function is not addressed by the patch and is unknown/not determinable from the provided materials.

6. Broader Kernel Security Implications
Fixing this leak prevents unprivileged users from exhausting kernel memory via a simple sysfs write pattern, reducing the risk of OOM events and system-wide service disruption. It reinforces proper resource management in sysfs interfaces, which are commonly accessible and thus sensitive to misuse. Ensuring deallocation on attribute updates improves the robustness of DAMON configuration paths and sets a precedent for careful memory lifecycle handling in similar kernel subsystems.