    diff --git a/fs/eventpoll.c b/fs/eventpoll.c
    index a97a771a459c9c..895256cd2786e2 100644
    --- a/fs/eventpoll.c
    +++ b/fs/eventpoll.c
    @@ -828,7 +828,7 @@ static bool __ep_remove(struct eventpoll *ep, struct epitem *epi, bool force)
     	kfree_rcu(epi, rcu);
     
     	percpu_counter_dec(&ep->user->epoll_watches);
    -	return ep_refcount_dec_and_test(ep);
    +	return true;
     }
     
     /*
    @@ -836,14 +836,14 @@ static bool __ep_remove(struct eventpoll *ep, struct epitem *epi, bool force)
      */
     static void ep_remove_safe(struct eventpoll *ep, struct epitem *epi)
     {
    -	WARN_ON_ONCE(__ep_remove(ep, epi, false));
    +	if (__ep_remove(ep, epi, false))
    +		WARN_ON_ONCE(ep_refcount_dec_and_test(ep));
     }
     
     static void ep_clear_and_put(struct eventpoll *ep)
     {
     	struct rb_node *rbp, *next;
     	struct epitem *epi;
    -	bool dispose;
     
     	/* We need to release all tasks waiting for these file */
     	if (waitqueue_active(&ep->poll_wait))
    @@ -876,10 +876,8 @@ static void ep_clear_and_put(struct eventpoll *ep)
     		cond_resched();
     	}
     
    -	dispose = ep_refcount_dec_and_test(ep);
     	mutex_unlock(&ep->mtx);
    -
    -	if (dispose)
    +	if (ep_refcount_dec_and_test(ep))
     		ep_free(ep);
     }
     
    @@ -1100,7 +1098,7 @@ again:
     		dispose = __ep_remove(ep, epi, true);
     		mutex_unlock(&ep->mtx);
     
    -		if (dispose)
    +		if (dispose && ep_refcount_dec_and_test(ep))
     			ep_free(ep);
     		goto again;
     	}