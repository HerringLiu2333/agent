     @@ -1683,10 +1683,16 @@ struct xe_vm *xe_vm_create(struct xe_device *xe, u32 flags)
     		xe_pm_runtime_get_noresume(xe);
     	}
     
     +	if (flags & XE_VM_FLAG_FAULT_MODE) {
     +		err = xe_svm_init(vm);
     +		if (err)
     +			goto err_no_resv;
     +	}
     +
     	vm_resv_obj = drm_gpuvm_resv_object_alloc(&xe->drm);
     	if (!vm_resv_obj) {
     		err = -ENOMEM;
     -		goto err_no_resv;
     +		goto err_svm_fini;
     	}
     
     	drm_gpuvm_init(&vm->gpuvm, "Xe VM", DRM_GPUVM_RESV_PROTECTED, &xe->drm,
     @@ -1757,12 +1763,6 @@ struct xe_vm *xe_vm_create(struct xe_device *xe, u32 flags)
     		}
     	}
     
     -	if (flags & XE_VM_FLAG_FAULT_MODE) {
     -		err = xe_svm_init(vm);
     -		if (err)
     -			goto err_close;
     -	}
     -
     	if (number_tiles > 1)
     		vm->composite_fence_ctx = dma_fence_context_alloc(1);
     
     @@ -1776,6 +1776,11 @@ err_close:
     	xe_vm_close_and_put(vm);
     	return ERR_PTR(err);
     
     +err_svm_fini:
     +	if (flags & XE_VM_FLAG_FAULT_MODE) {
     +		vm->size = 0; /* close the vm */
     +		xe_svm_fini(vm);
     +	}
      err_no_resv:
     	mutex_destroy(&vm->snap_mutex);
     	for_each_tile(tile, xe, id)