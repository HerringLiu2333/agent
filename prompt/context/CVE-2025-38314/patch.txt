    @@ -48,6 +48,7 @@ void vp_modern_avq_done(struct virtqueue *vq)
     {
     	struct virtio_pci_device *vp_dev = to_vp_device(vq->vdev);
     	struct virtio_pci_admin_vq *admin_vq = &vp_dev->admin_vq;
    +	unsigned int status_size = sizeof(struct virtio_admin_cmd_status);
     	struct virtio_admin_cmd *cmd;
     	unsigned long flags;
     	unsigned int len;
    @@ -56,7 +57,17 @@ void vp_modern_avq_done(struct virtqueue *vq)
     	do {
     		virtqueue_disable_cb(vq);
     		while ((cmd = virtqueue_get_buf(vq, &len))) {
    -			cmd->result_sg_size = len;
    +			/* If the number of bytes written by the device is less
    +			 * than the size of struct virtio_admin_cmd_status, the
    +			 * remaining status bytes will remain zero-initialized,
    +			 * since the buffer was zeroed during allocation.
    +			 * In this case, set the size of command_specific_result
    +			 * to 0.
    +			 */
    +			if (len < status_size)
    +				cmd->result_sg_size = 0;
    +			else
    +				cmd->result_sg_size = len - status_size;
     			complete(&cmd->completion);
     		}
     	} while (!virtqueue_enable_cb(vq));