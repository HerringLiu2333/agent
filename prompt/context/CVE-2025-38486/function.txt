static void *qcom_swrm_get_sdw_stream(struct snd_soc_dai *dai, int direction)
{
	struct qcom_swrm_ctrl *ctrl = dev_get_drvdata(dai->dev);

	return ctrl->sruntime[dai->id];
}

/* ----- separator ----- */

static int qcom_swrm_set_channel_map(struct snd_soc_dai *dai,
				     unsigned int tx_num, const unsigned int *tx_slot,
				     unsigned int rx_num, const unsigned int *rx_slot)
{
	struct qcom_swrm_ctrl *ctrl = dev_get_drvdata(dai->dev);
	int i;

	if (tx_slot) {
		for (i = 0; i < tx_num; i++)
			ctrl->pconfig[i].ch_mask = tx_slot[i];
	}

	if (rx_slot) {
		for (i = 0; i < rx_num; i++)
			ctrl->pconfig[i].ch_mask = rx_slot[i];
	}

	return 0;
}

/* ----- separator ----- */

static int qcom_swrm_startup(struct snd_pcm_substream *substream,
			     struct snd_soc_dai *dai)
{
	struct qcom_swrm_ctrl *ctrl = dev_get_drvdata(dai->dev);
	int ret;

	ret = pm_runtime_get_sync(ctrl->dev);
	if (ret < 0 && ret != -EACCES) {
		dev_err_ratelimited(ctrl->dev,
				    "pm_runtime_get_sync failed in %s, ret %d\n",
				    __func__, ret);
		pm_runtime_put_noidle(ctrl->dev);
		return ret;
	}

	return 0;
}